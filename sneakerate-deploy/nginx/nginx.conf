# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.fedora.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    index   index.html index.htm;

    # enable gzip compression
    gzip on;

    gzip_min_length 256;
    gzip_buffers 16 8k;
    gzip_comp_level 6;
    #gzip_http_version 1.1;
    gzip_proxied any;
    gzip_vary on;
    gzip_types text/plain text/html text/css application/json application/javascript application/x-javascript text/javascript text/xml application/xml
    gzip_disable  "msie6";
    # end gzip configuration
	
	ssl_prefer_server_ciphers on;
	ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;

    upstream sneakerate {
		least_conn;
		server sneakerate-server-1:9001;
        server sneakerate-server-2:9002; 
    }
	
	upstream img.sneakerate {
		least_conn;
		server sneakerate-imageserver-1:8001;
        server sneakerate-imageserver-2:8002; 
    }

    server {
        listen 80;
        server_name sneakerate.com;

        return 301 https://www.sneakerate.com$request_uri;
    }
	
	server {
        listen 80;
        server_name img.sneakerate.com;

        return 301 https://www.img.sneakerate.com$request_uri;
    }
	
	server {
		listen 80 default_server;
		listen [::]:80 default_server;
		server_name _;
		return 301 https://$host$request_uri;
	}

    # Expires map
    map $sent_http_content_type $expires {
		default 30d;
    }
	
	expires $expires;

    server {
		listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name   www.sneakerate.com;
        root         /usr/share/nginx/html;
		
		ssl_certificate "/etc/letsencrypt/live/www.sneakerate.com/fullchain.pem";
        ssl_certificate_key "/etc/letsencrypt/live/www.sneakerate.com/privkey.pem";
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
			proxy_pass http://sneakerate;
        }

        # redirect server error pages to the static page /40x.html
        #
        error_page 404 /404.html;
            location = /40x.html {
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
	
	server {
		listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name   www.img.sneakerate.com;
		
		ssl_certificate "/etc/letsencrypt/live/www.img.sneakerate.com/fullchain.pem";
        ssl_certificate_key "/etc/letsencrypt/live/www.img.sneakerate.com/privkey.pem";
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
			proxy_pass http://img.sneakerate;
        }

        # redirect server error pages to the static page /40x.html
        #
        error_page 404 /404.html;
            location = /40x.html {
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
}

